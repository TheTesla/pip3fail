Listing '.'...
Listing './bin'...
Listing './include'...
Listing './lib'...
Listing './lib/python3.5'...
Listing './lib/python3.5/site-packages'...
Listing './lib/python3.5/site-packages/lmc'...
Compiling './lib/python3.5/site-packages/lmc/lmc.py'...
***   File "./lib/python3.5/site-packages/lmc/lmc.py", line 87
    print """
The module should be very flexible, but is designed with these things foremost in mind:
  1. use with expensive likelihood calculations which probably have a host of hard-to-modify code associated with them.
  2. making it straightforward to break the parameter space into subspaces which can be sampled using different proposal methods and at different rates. For example, if changing some parameters requires very expensive calulations in the likelihood, the other, faster parameters can be sampled at a higher rate. Or, some parameters may lend themselves to Gibbs sampling, while others may not, and these can be block updated independently.
  3. keeping the overhead low to facilitate large numbers of parameters. Some of this has been lost in the port from C++, but, for example, the package provides automatic tuning of the proposal covariance for block updating without needing to store traces of the parameters in memory.

Real-valued parameters are usually assumed, but the framework can be used with other types of parameters, with suitable overloading of classes.

A byproduct of item (1) is that the user is expected to handle all aspects of the calculation of the posterior. The module doesn't implement assignment of canned, standard priors, or automatic discovery of shortcuts like conjugate Gibbs sampling. The idea is that the user is in the best position to know how the details of the likelihood and priors should be implemented. (Note that, as is, the code very naturally handles log-posterior values of -infinity, corresponding to zero probability, e.g. when a proposed parameter value is outside the allowed range. The only point to be careful of is that most samplers need to start at a point with non-zero probability.)

It's probably worth reading the docstrings for:
 Parameter
 ParameterSpace
 Updater, CartesianSequentialUpdater, CartesianPermutationUpdater, MultiDimSequentialUpdater, MultiDimPermutationUpdater, MultiDimRotationUpdater, GoodmanWeareUpdater, TableUpdater
 Slice, Metropolis 
 randNormalExp, randChiExp
 textBackend, stdoutBackend, dictBackend, binaryBackend
 Engine
 Vehicle
 

Here is a quick overview of the class structure:
 Parameter objects should be self explanatory.
 ParameterSpace objects represent sets of Parameters for organizational purposes.
 Updater objects provide the mechanism to sample a ParameterSpace. They come in several varieties:
   * Cartesian updaters perform updates to each Parameter in their ParameterSpace individually.
   * MultiDim updaters perform block updates to all parameters in their ParameterSpace at the same time.
  Each of these comes in Sequential and Permutation flavors, corresponding to sampling each direction in the ParameterSpace in fixed or random order. There is also a Rotation version of the MultiDim updater, which proposes along completely random directions in the multi-dimension parameter space, with the step length scaled appropriately for the direction chosen, given the covariance matrix.
  Updaters can adapt their proposal distributions. Cartesian updaters tune the typical scale of proposed steps for each parameter, while MultiDim updaters tune the set of basis directions used to explore the ParameterSpace, as well as the scale along each direction.
  There are some more specialized Updaters, with somewhat restricted functionality compared to the very general ones above.
   * GoodmanWeareUpdater is an ensemble updater (i.e. does not generate a Markov chain); see its docstring.
   * TableUpdater allows you to restrict some parameters to a particular set of tabulated values, and uses the Metropolis stepper to try to move among them.
  Updater states (e.g. the proposal basis after adapting) can be saved to and restored from files using the save() and restore() methods. The relevant data are stored as a dictionary using cPickle; this should be safer and preferable to pickling the Updater object directly. Cartesian and MultiDim updaters are mutually compatible as far as this functionality is concerned, inasmuch as that's possible.
 Step objects implement the specific algorithm used to propose a step along a given direction. Slice and Metropolis algorithms are implemented. The distribution of proposal lengths by Metropolis Step objects is customizable.
 Backend objects handle the storage of Parameter values as the chain progresses.
 Engine objects hold a list of Updater objects, each of which is called in a single iteration of the chain.
 Vehicle objects encapsulate most of the setup necessary for the most common analysis situation (a single parameter space and updater).

Finally, the ChiSquareLikelihood class may simplify the setup of least-squares style problems. Similar helper classes could clearly be added.


Communication between parallel chains can significantly speed up convergence. In parallel mode, adaptive Updaters use information from all running chains to tune their proposals, rather than only from their own chain. The Gelman-Rubin convergence criterion (ratio of inter- to intra-chain variances) for each free parameter is also calculated. Parallelization is implemented in two ways; see ?Updater for instructions on using each.
  1. Via MPI (using mpi4py). MPI adaptations are synchronous: when a chain reaches a communication point, it stops until all chains have caught up. All Updaters in a given chain should use the same communicator (at least, there's no advantage in doing otherwise). (This could be made safely asynchronous using shared memory, although I'm not sure that would be an improvement.)
  2. Via the filesystem. When a chain adapts, it will write its covariance information to a file. It will then read in any information from other chains that is present in similar files, and incorporate it when tuning. This process is asynchronous; chains will not wait for one another, they will simply adapt using whatever information has been shared at the time. The global variables parallel_filename_base and parallel_filename_ext can be used to customize the prefix and suffix of the files written.


The definition of an MCMC iteration in this implementation can be a little confusing. As far as an MultiDim updater object's 'count' attribute (controlling the timing of adaptations, for example) is concerned, an iteration corresponds to one proposal along some direction. For Cartesian updaters, each iteration corresponds to a separate proposal for all of the Parameters in the Updater's ParameterSpace. (This disparity is unfortunate, but ensures that the count attribute is the correct value to use when, e.g., calculating chain variances on the fly.) In either case, the Updater's rate attribute determines how many of these iterations occur each time the updater is called by the Engine (default=1). However, as far as the Engine is concerned, an iteration corresponds to a loop over all loaded Updaters. So if there are two MultiDim updaters, u1 and u2, with rates set to 1 and 2, and the Engine's updater list is [u2, u1, u2] (repetition is perfectly allowed, and sometimes desirable), then each iteration of the Engine actually corresponds to 1*u1.rate + 2*u2.rate = 5 proposals. However, if u1 is instead a Cartesian updater controlling 3 Parameters, then each engine iteration implies 7 proposals. The chain is stored to the Backend(s) after each Engine iteration. The upshot of all this is that manipulating the Engine's list of Updaters provides lots of flexibility to sample parameters at different rates and/or thin the chain as it's being run, at the expense of a little complexity.

See also lmc.example()


Crude non-MCMC functionality:
1. ParameterSpace.optimize provides deterministic minimization (using scipy.optimize.fmin_powell) to get an decent initial fit. This is not very efficient.
2. Updater.set_covariance_from_hessian uses finite differencing to estimate an appropriate cartesian width in each direction. This will fail if the state is not in a local minimum, or just because. (NB commented due to compatibility issues.)
"""
             
                                                                                       
                                                                                                                       
                                                                                                                                                                                                                                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                                                            

                                                                                                                                               



                                               
          
               
                                                                                                                                                                                    
                   
                          
                                                       
       
        
 

                                                
                                              
                                                                                 
                                                                                                  
                                                                                               
                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                          
                                                                                                                           
                                                                                                           
                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                
                                                                                
                                                                                                           
                                                                                                                                       

                                                                                                                                             


                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                         





                      


                             
                                                                                                                                                           
                                                                                                                                                                                                                                                 
  ^
SyntaxError: invalid syntax

Listing './lib/python3.5/site-packages/lmc-0.1.0.egg-info'...
Listing './lib/python3.5/site-packages/numpy'...
Listing './lib/python3.5/site-packages/numpy/.libs'...
Listing './lib/python3.5/site-packages/numpy/compat'...
Listing './lib/python3.5/site-packages/numpy/core'...
Listing './lib/python3.5/site-packages/numpy/core/include'...
Listing './lib/python3.5/site-packages/numpy/core/include/numpy'...
Listing './lib/python3.5/site-packages/numpy/core/lib'...
Listing './lib/python3.5/site-packages/numpy/core/lib/npy-pkg-config'...
Listing './lib/python3.5/site-packages/numpy/core/tests'...
Listing './lib/python3.5/site-packages/numpy/core/tests/data'...
Listing './lib/python3.5/site-packages/numpy/distutils'...
Listing './lib/python3.5/site-packages/numpy/distutils/command'...
Listing './lib/python3.5/site-packages/numpy/distutils/fcompiler'...
Listing './lib/python3.5/site-packages/numpy/distutils/mingw'...
Listing './lib/python3.5/site-packages/numpy/distutils/tests'...
Listing './lib/python3.5/site-packages/numpy/doc'...
Listing './lib/python3.5/site-packages/numpy/f2py'...
Listing './lib/python3.5/site-packages/numpy/f2py/src'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/array_from_pyobj'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/assumed_shape'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/common'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/kind'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/mixed'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/parameter'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/regression'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/size'...
Listing './lib/python3.5/site-packages/numpy/f2py/tests/src/string'...
Listing './lib/python3.5/site-packages/numpy/fft'...
Listing './lib/python3.5/site-packages/numpy/fft/tests'...
Listing './lib/python3.5/site-packages/numpy/lib'...
Listing './lib/python3.5/site-packages/numpy/lib/tests'...
Listing './lib/python3.5/site-packages/numpy/lib/tests/data'...
Listing './lib/python3.5/site-packages/numpy/linalg'...
Listing './lib/python3.5/site-packages/numpy/linalg/tests'...
Listing './lib/python3.5/site-packages/numpy/ma'...
Listing './lib/python3.5/site-packages/numpy/ma/tests'...
Listing './lib/python3.5/site-packages/numpy/matrixlib'...
Listing './lib/python3.5/site-packages/numpy/matrixlib/tests'...
Listing './lib/python3.5/site-packages/numpy/polynomial'...
Listing './lib/python3.5/site-packages/numpy/polynomial/tests'...
Listing './lib/python3.5/site-packages/numpy/random'...
Listing './lib/python3.5/site-packages/numpy/random/tests'...
Listing './lib/python3.5/site-packages/numpy/testing'...
Listing './lib/python3.5/site-packages/numpy/testing/nose_tools'...
Listing './lib/python3.5/site-packages/numpy/testing/tests'...
Listing './lib/python3.5/site-packages/numpy/tests'...
Listing './lib/python3.5/site-packages/numpy-1.14.0.dist-info'...
Listing './lib/python3.5/site-packages/pip'...
Listing './lib/python3.5/site-packages/pip/_vendor'...
Listing './lib/python3.5/site-packages/pip/commands'...
Listing './lib/python3.5/site-packages/pip/compat'...
Listing './lib/python3.5/site-packages/pip/models'...
Listing './lib/python3.5/site-packages/pip/operations'...
Listing './lib/python3.5/site-packages/pip/req'...
Listing './lib/python3.5/site-packages/pip/utils'...
Listing './lib/python3.5/site-packages/pip/vcs'...
Listing './lib/python3.5/site-packages/pip-9.0.1.dist-info'...
Listing './lib/python3.5/site-packages/pkg_resources'...
Listing './lib/python3.5/site-packages/pkg_resources/_vendor'...
Listing './lib/python3.5/site-packages/pkg_resources/_vendor/packaging'...
Listing './lib/python3.5/site-packages/pkg_resources/extern'...
Listing './lib/python3.5/site-packages/pkg_resources-0.0.0.dist-info'...
Listing './lib/python3.5/site-packages/setuptools'...
Listing './lib/python3.5/site-packages/setuptools/command'...
Listing './lib/python3.5/site-packages/setuptools/extern'...
Listing './lib/python3.5/site-packages/setuptools-32.3.1.dist-info'...
Listing './share'...
Listing './share/python-wheels'...
